{
	"comment": "This is bundled JSON file. Idea is that we should externalize this also as part of build. Currently this is going to hold the dev env information",
	"defaultDataSource": {
		"nucleus.ds.type": "hikari",
		"username": "nucleus",
		"password": "nucleus",
		"autoCommit": true,
		"jdbcUrl": "jdbc:postgresql://localhost:5432/nucleus",
		"maximumPoolSize": 5
	},
	"dsDataSource": {
		"nucleus.ds.type": "hikari",
		"username": "dsuser",
		"password": "dspass",
		"autoCommit": false,
		"jdbcUrl": "jdbc:postgresql://localhost:5432/dsdb",
		"maximumPoolSize": 5
	},
	"authDataSource": {
		"nucleus.ds.type": "hikari",
		"username": "authuser",
		"password": "authpass",
		"autoCommit": false,
		"jdbcUrl": "jdbc:postgresql://localhost:5432/authdb",
		"maximumPoolSize": 5
	},
	"org.gooru.missioncontrol.bootstrap.verticles.AuthVerticle": {
		"instances": 1,
		"worker": false,
		"config": {
			"redisConfig": {
	          "host": "localhost",
	          "port": 6379,
	          "encoding": "UTF-8",
	          "tcpKeepAlive": true,
	          "tcpNoDelay": true
	        },
	        "sessionTimeoutInSeconds": 2880
		}
	},
	"org.gooru.missioncontrol.bootstrap.verticles.HttpVerticle": {
		"instances": 1,
		"worker": false,
		"config": {
			"http.port": 8081,
			"metrics.periodicity.seconds": 300,
			"message.bus.send.timeout.seconds": 180,
			"request.body.size.max.mb": 5
		}
	},
	"org.gooru.missioncontrol.bootstrap.verticles.DispatcherVerticle": {
		"instances": 1,
		"worker": false,
		"config": {
		}
	},
	"org.gooru.missioncontrol.bootstrap.verticles.SessionPersistenceVerticle": {
		"instances": 1,
		"worker": false,
		"config": {
			"redisConfig": {
	          "host": "localhost",
	          "port": 6379,
	          "encoding": "UTF-8",
	          "tcpKeepAlive": true,
	          "tcpNoDelay": true
	        },
	        "sessionTimeoutInSeconds": 2880
		}
	},
	"app.configuration": {
		"temp.file.location" : "/home/gooru/data/gooru/code/mission-control-api/uploads/",
        "catalog.api.server.host" : "localhost",
		"catalog.api.server.port" : 8081,
		"catalog.api.transcript.uri":"/api/catalog/v1/resource/transcripts?resource_ids=",
		"catalog.api.summary.uri":"/api/catalog/v1/resource/summary?resource_ids="
	}
}
